version: '3.8'
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "{{ prometheus_config.port }}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time={{ prometheus_config.retention_time }}'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "{{ grafana_config.port }}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER={{ grafana_config.admin_user }}
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_config.admin_password }}
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "{{ monitoring_config.node_exporter_port }}:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped

{% if alertmanager_config.enable_slack %}
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "{{ alertmanager_config.port }}:9093"
    volumes:
      - alertmanager-data:/alertmanager
    restart: unless-stopped
{% endif %}

volumes:
  prometheus-data:
  grafana-data:
{% if alertmanager_config.enable_slack %}
  alertmanager-data:
{% endif %}
