---
# ðŸ‘¥ GESTIÃ“N DE USUARIOS - Basado en users.yml y permisos por servidor
- name: "ðŸ“‹ Cargar configuraciÃ³n de usuarios"
  include_vars: "{{ playbook_dir }}/users.yml"

- name: "ðŸ‘¤ Crear usuarios segÃºn sus permisos para este tipo de servidor"
  user:
    name: "{{ item.key }}"
    comment: "{{ item.value.full_name }}"
    groups: "{{ user_groups }}"
    shell: /bin/bash
    create_home: yes
  loop: "{{ users | dict2items }}"
  vars:
    # Determinar grupos segÃºn permisos del usuario en este tipo de servidor
    server_type: "{{ group_names[0] }}"  # Primer grupo del inventario
    user_permissions: "{{ item.value.permissions[server_type] | default([]) }}"
    user_groups: >-
      {{ 
        (['sudo'] if 'sudo' in user_permissions else []) +
        (['docker'] if 'docker' in user_permissions else []) +
        (['www-data'] if 'www-data' in user_permissions else []) +
        (['jenkins'] if 'jenkins' in user_permissions else [])
      }}
  when: 
    - item.value.permissions[server_type] is defined
    - item.value.permissions[server_type] | length > 0

- name: "ðŸ”‘ Configurar claves SSH pÃºblicas"
  authorized_key:
    user: "{{ item.key }}"
    key: "{{ item.value.ssh_public_key }}"
    comment: "{{ item.value.email }}"
  loop: "{{ users | dict2items }}"
  vars:
    server_type: "{{ group_names[0] }}"
  when: 
    - item.value.permissions[server_type] is defined
    - item.value.permissions[server_type] | length > 0
  ignore_errors: yes

- name: "ðŸ“‹ Mostrar usuarios configurados"
  debug:
    msg: "ðŸ‘¤ Usuario configurado: {{ item.key }} ({{ item.value.full_name }}) en servidor tipo {{ group_names[0] }}"
  loop: "{{ users | dict2items }}"
  vars:
    server_type: "{{ group_names[0] }}"
  when: 
    - item.value.permissions[server_type] is defined
    - item.value.permissions[server_type] | length > 0
